{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"tableView"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"tableView"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UITableView","preciseIdentifier":"c:objc(cs)UITableView"},{"kind":"text","text":", "},{"kind":"externalParam","text":"cellForRowAt"},{"kind":"text","text":" "},{"kind":"internalParam","text":"indexPath"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"IndexPath","preciseIdentifier":"s:10Foundation9IndexPathV"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"UITableViewCell","preciseIdentifier":"c:objc(cs)UITableViewCell"}],"languages":["swift"],"platforms":["iOS"]}]},{"kind":"content","content":[{"anchor":"return-value","level":2,"type":"heading","text":"Return Value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"An object inheriting from UITableViewCell that the table view can use for the specified row. UIKit raises an assertion if you return nil."}]}]},{"kind":"parameters","parameters":[{"name":"tableView","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A table-view object requesting the cell."}]}]},{"name":"indexPath","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"An index path locating a row in tableView."}]}]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"In your implementation, create and configure an appropriate cell for the given index path. Create your cell using the table view’s dequeueReusableCell(withIdentifier:for:) method, which recycles or creates the cell for you. After creating the cell, update the properties of the cell with appropriate data values."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Never call this method yourself. If you want to retrieve cells from your table, call the table view’s cellForRow(at:) method instead."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"If indexpath section  == 0 then call Show the post here with image, text, video, audio or document and send the view model cell api setup"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"If indexpath.section == 1"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Check isclap true and isTag true and isThread 2 and threadid not equal to empty and postid not equal to empty and member list > 1 then input tool bar will be hide else input toolbar will be shown"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"If message list array count is 0 show no data tableview cell"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"If message from same userid it will show current sender  chat text message cell"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Else it will show chat receive message cell"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Else"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Show clap table view cell"}]}]},{"content":[{"type":"orderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"If Threadcount  == thread limit and is thread not 1 then show the member limit exceeded"}]}]}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"2 ) If isclap true and isTag true and thread 2 and thread id empty or not empty and own user id “You can’t send loop request to your own spark”"}]}]},{"content":[{"type":"orderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"If iclap true and isTag true and thread 2 and thread id empty  It will be “You’re no longer a member in this loop”"}]}]}]}]},{"content":[{"type":"orderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"If  isclap true and isTag true and thread 2 and isUserPostId not equal to empty"}]}]}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"i) If it monetise 1 show buy now  button if monetise 2 show continue button else show “clap” button"}]}]},{"content":[{"type":"orderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"If isclap true and isTag true and thread 2 and isUserpostid is empty"}]}]}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"i)  If it monetise 1 show buy now  button if monetise 2 show continue button else show “Connect” button"}]}]}]}]},{"content":[{"type":"orderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"If isclap true and isTag true and thread 0"}]}]}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"i) If it monetise 1 show buy now  button if monetise 2 show continue button else show “Connect” button"}]}]}]}]},{"content":[{"type":"orderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"If isclap true and isTag true and thread 0 show “Loop request has been sent. Waiting for the users approval”"}]}]}]}]},{"content":[{"type":"orderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"If isclap false and isTag false"}]}]}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"i)  If it monetise 1 show buy now  button if monetise 2 show continue button else show “Connect” button"}]}]}]}]},{"content":[{"type":"orderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"If isclap true and isTag false"}]}]}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"i) If it monetise 1 show buy now  button if monetise 2 show continue button else show “Connect” button"}]}]}]}]},{"content":[{"type":"orderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"If isclap false and isTag true"}]}]}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"i) If it monetise 1 show buy now  button if monetise 2 show continue button else show “Connect” button"},{"type":"text","text":" "},{"type":"text","text":"Else"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"i) If is thread 2 and isuserpostid not empty threadid not empty, isuserpost id not empty and member list  > 1"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"ii) Show Clap Button"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Else if thread id == 0"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"i) show connect button"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Else"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"i) Show connect button"}]}]}]}]}]}]}],"schemaVersion":{"major":0,"minor":2,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/spark_me\/feeddetailsviewcontroller\/tableview(_:cellforrowat:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/com.adhash.spark\/documentation\/Spark_me\/FeedDetailsViewController\/tableView(_:cellForRowAt:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Asks the data source for a cell to insert in a particular location of the table view."}],"kind":"symbol","metadata":{"role":"symbol","title":"tableView(_:cellForRowAt:)","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"tableView"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"UITableView","preciseIdentifier":"c:objc(cs)UITableView"},{"kind":"text","text":", "},{"kind":"externalParam","text":"cellForRowAt"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"IndexPath","preciseIdentifier":"s:10Foundation9IndexPathV"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"UITableViewCell","preciseIdentifier":"c:objc(cs)UITableViewCell"}],"symbolKind":"method","externalID":"c:@CM@Spark_me@objc(cs)FeedDetailsViewController(im)tableView:cellForRowAtIndexPath:","extendedModule":"Spark_me","modules":[{"name":"Spark_me"}]},"hierarchy":{"paths":[["doc:\/\/com.adhash.spark\/documentation\/Spark_me","doc:\/\/com.adhash.spark\/documentation\/Spark_me\/FeedDetailsViewController","doc:\/\/com.adhash.spark\/documentation\/Spark_me\/FeedDetailsViewController\/UITableViewDataSource-Implementations"]]},"references":{"doc://com.adhash.spark/documentation/Spark_me/FeedDetailsViewController/UITableViewDataSource-Implementations":{"role":"collectionGroup","title":"UITableViewDataSource Implementations","abstract":[],"identifier":"doc:\/\/com.adhash.spark\/documentation\/Spark_me\/FeedDetailsViewController\/UITableViewDataSource-Implementations","kind":"article","type":"topic","url":"\/documentation\/spark_me\/feeddetailsviewcontroller\/uitableviewdatasource-implementations"},"doc://com.adhash.spark/documentation/Spark_me":{"role":"collection","title":"Spark_me","abstract":[],"identifier":"doc:\/\/com.adhash.spark\/documentation\/Spark_me","kind":"symbol","type":"topic","url":"\/documentation\/spark_me"},"doc://com.adhash.spark/documentation/Spark_me/FeedDetailsViewController/tableView(_:cellForRowAt:)":{"role":"symbol","title":"tableView(_:cellForRowAt:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"tableView"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"UITableView","preciseIdentifier":"c:objc(cs)UITableView"},{"kind":"text","text":", "},{"kind":"externalParam","text":"cellForRowAt"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"IndexPath","preciseIdentifier":"s:10Foundation9IndexPathV"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"UITableViewCell","preciseIdentifier":"c:objc(cs)UITableViewCell"}],"abstract":[{"type":"text","text":"Asks the data source for a cell to insert in a particular location of the table view."}],"identifier":"doc:\/\/com.adhash.spark\/documentation\/Spark_me\/FeedDetailsViewController\/tableView(_:cellForRowAt:)","kind":"symbol","type":"topic","url":"\/documentation\/spark_me\/feeddetailsviewcontroller\/tableview(_:cellforrowat:)"},"doc://com.adhash.spark/documentation/Spark_me/FeedDetailsViewController":{"role":"symbol","title":"FeedDetailsViewController","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"FeedDetailsViewController"}],"abstract":[{"type":"text","text":"Post detail page activity - Core Logic of the application holds by this class"},{"type":"text","text":" "},{"type":"text","text":"Detailed Information of a Spark Post"},{"type":"text","text":" "},{"type":"text","text":"Post can contains Medias like Audio, Video, Image, Document and Text"},{"type":"text","text":" "},{"type":"text","text":"Post Categories are Global, Local, Social and Closed"},{"type":"text","text":" "},{"type":"text","text":"Special Post Categories are Monetize and NFT"},{"type":"text","text":" "},{"type":"text","text":"RazorPay Payment Gateway Implemented for buying Monetize posts"},{"type":"text","text":" "},{"type":"text","text":"Date \/ Time Function Implemented"},{"type":"text","text":" "},{"type":"text","text":"Image Download from Server for both profile or post"},{"type":"text","text":" "},{"type":"text","text":"Audio\/Video Player Implemented"},{"type":"text","text":" "},{"type":"text","text":"View, Connections and Clap counts of a post shown using 1000 - 1K standard"},{"type":"text","text":" "},{"type":"text","text":"Posts can be shared"},{"type":"text","text":" "},{"type":"text","text":"Our own post can be deleted until loop formed."},{"type":"text","text":" "},{"type":"text","text":"LOOP Concepts:"},{"type":"text","text":" "},{"type":"text","text":"Connected members are listed in the top"},{"type":"text","text":" "},{"type":"text","text":"Post owner can exit from the loop (note: Monetize Post owner cant exit from the loop)."},{"type":"text","text":" "},{"type":"text","text":"Post owner can remove users from this loop."},{"type":"text","text":" "},{"type":"text","text":"Users can exit from their connected loops."},{"type":"text","text":" "},{"type":"text","text":"Connected users and post owner can chat each other."}],"identifier":"doc:\/\/com.adhash.spark\/documentation\/Spark_me\/FeedDetailsViewController","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"FeedDetailsViewController"}],"url":"\/documentation\/spark_me\/feeddetailsviewcontroller"}}}